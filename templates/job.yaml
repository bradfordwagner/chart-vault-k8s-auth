apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-init-auth
  labels:
    {{- include "labels" . | nindent 4 }}
  annotations:
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
spec:
  template:
    spec:
      serviceAccountName: {{ .Values.service_account }}
      restartPolicy: Never
      containers:
        - name: main
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: IfNotPresent
          resources: {{ .Values.resources | toYaml | nindent 11 }}
          command:
            - /bin/bash
            - -lc
            - |
              export VAULT_TOKEN=$(vault write auth/approle/login role_id=${role_id} secret_id=${secret_id} -format=json | jq -r '.auth.client_token')
              export jwt=$(kubectl get secret {{ .Values.service_account }} \
                --output 'go-template={{`{{ .data.token }}`}}' | base64 -d)
              vault write auth/kubernetes/${cluster_name}/config \
                   token_reviewer_jwt="${jwt}" \
                   kubernetes_host="${server}" \
                   kubernetes_ca_cert="${ca}"
          env:
            - name: VAULT_ADDR
              value: {{ .Values.vault.address }}
          envFrom:
            - secretRef:
                name: {{ .Values.context.secret.name }}
